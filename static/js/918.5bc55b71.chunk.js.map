{"version":3,"file":"static/js/918.5bc55b71.chunk.js","mappings":"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","sources":["shared/utils/utils.js","components/todo-item/TodoItem.jsx","components/add-todo/AddTodo.jsx","components/todos/Todos.jsx"],"sourcesContent":["const DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nexport const formatDate = (dateString) => {\n  const dateObj = new Date(dateString);\n  const day = DAYS[dateObj.getDay()];\n  const date = dateObj.getDate();\n  const month = MONTHS[dateObj.getMonth()];\n  return `${day} - ${month} ${date}`\n}","import React, { forwardRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { formatDate } from \"../../shared/utils/utils\";\nimport \"./TodoItem.css\";\n\nexport const TodoItem = forwardRef(function TodoItem(\n  { todo, handleDelete, handleStatusChange },\n  inputRef\n) {\n  const navigate = useNavigate();\n  const handleTodoClick = () => {\n    navigate(`/todos/${todo.id}`);\n  };\n  return (\n    <li className=\"todo-item\">\n      <label htmlFor={`status-${todo.id}`}>\n        <input\n          type=\"checkbox\"\n          name=\"status\"\n          id={`status-${todo.id}`}\n          checked={todo.isCompleted}\n          onChange={(e) => handleStatusChange(todo.id, e.target.checked)}\n          ref={inputRef}\n        />\n      </label>\n      <span\n        className={todo.isCompleted ? \"completed\" : \"\"}\n        onClick={handleTodoClick}\n        data-testid=\"todo-title\"\n      >\n        {/* <Link to={`/todos/${todo.id}`}>{todo.title}</Link> */}\n        {todo.title}\n        <small className=\"todo-date\">{formatDate(todo.createdAt)}</small>\n      </span>\n      <button className=\"btn btn-danger\" onClick={() => handleDelete(todo.id)}>\n        <i className=\"fa-solid fa-trash\"></i>\n      </button>\n    </li>\n  );\n});\n","import React from \"react\";\n\nexport class AddTodo extends React.Component {\n  constructor() {\n    // console.log(\"constructor\");\n    super();\n    this.state = {\n      title: \"\",\n    };\n    this.body = null;\n    this.intervalId = null;\n    this.titleRef = React.createRef();\n  }\n\n  // static getDerivedStateFromProps(props, state) {\n  //   console.log(\"getDerivedStateFromProps\", props, state);\n  //   return {\n  //     title: \"title from static method\",\n  //     today: new Date(),\n  //   };\n  // }\n\n  // getSnapshotBeforeUpdate() {\n  //   console.log(\"getSnapshotBeforeUpdate\");\n  // }\n\n  // componentDidMount() {\n  //   this.body = document.getElementById(\"body\");\n  //   this.body.addEventListener(\"scroll\", (event) => {\n  //     console.log(\"scroll event\");\n  //   });\n  //   console.log(\"componentDidMount\");\n  //   setInterval(() => {}, 1000);\n  // }\n\n  // componentWillUnmount() {\n  //   this.body.removeEventListener(\"scroll\", () => {});\n  //   console.log(\"componentWillUnmount\");\n  // }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log(this.props, nextState, nextProps, this.state);\n  //   console.log(\"shouldComponentUpdate\");\n  //   return this.state.title !== nextState.title;\n  // }\n\n  // componentDidUpdate() {\n  //   console.log(\"componentDidUpdate\");\n  // }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    // const title = document.getElementById(\"title\");\n    // console.log(title.value);\n    // console.log(\n    //   this.titleRef.current,\n    //   this.titleRef.current.value,\n    //   this.state.title\n    // );\n    this.props.onAddTodo(this.state.title);\n    this.setState({\n      title: \"\",\n    });\n  };\n\n  handleTitleChange = (e) => {\n    // console.log(e.target.value);\n    this.setState({\n      title: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form action=\"\">\n        <div className=\"form-group\">\n          <label htmlFor=\"title\" className=\"sr-only\">\n            Todo Title\n          </label>\n          <input\n            type=\"text\"\n            placeholder=\"What would you like to do today?\"\n            id=\"title\"\n            ref={this.titleRef}\n            value={this.state.title}\n            onChange={this.handleTitleChange}\n            className=\"form-control\"\n          />\n          <button\n            className=\"btn btn-primary\"\n            type=\"submit\"\n            onClick={this.handleFormSubmit}\n          >\n            Add\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { useEffect, useRef, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TodoItem } from \"../todo-item/TodoItem\";\nimport { AddTodo } from \"../add-todo/AddTodo\";\nimport {\n  fetchTodoList,\n  createATodo,\n  updateATodo,\n  deleteATodo,\n} from \"../../app/todo/todo\";\nimport \"./Todos.css\";\n\nfunction Todos() {\n  const compRef = useRef();\n  const dispatch = useDispatch();\n  const todoState = useSelector((state) => state.todo);\n  console.log(\"reduxState\", todoState);\n\n  const fetchTodos = useCallback(async () => {\n    dispatch(fetchTodoList());\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchTodos();\n  }, [fetchTodos]);\n\n  const handleAddTodo = async (title) => {\n    dispatch(\n      createATodo({\n        title,\n        isCompleted: false,\n        createdAt: new Date().toISOString(),\n      })\n    );\n  };\n\n  const onHandleDelete = async (id) => {\n    dispatch(deleteATodo(id));\n  };\n\n  const onStatusChange = async (id, status) => {\n    const todoExists = todoState.todos.find((todo) => todo.id === id);\n    if (todoExists) {\n      dispatch(updateATodo({ ...todoExists, isCompleted: status }));\n    }\n  };\n\n  return (\n    <div className=\"todos\">\n      <h1 className=\"heading\">Todos</h1>\n      <AddTodo onAddTodo={handleAddTodo} />\n      <ul className=\"todos-list\">\n        {todoState.todos.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleDelete={onHandleDelete}\n            handleStatusChange={onStatusChange}\n            ref={compRef}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Todos;\n"],"names":["DAYS","MONTHS","formatDate","dateString","dateObj","Date","day","getDay","date","getDate","month","getMonth","concat","TodoItem","forwardRef","_ref","inputRef","todo","handleDelete","handleStatusChange","navigate","useNavigate","_jsxs","className","children","_jsx","htmlFor","id","type","name","checked","isCompleted","onChange","e","target","ref","onClick","handleTodoClick","title","createdAt","AddTodo","React","constructor","super","handleFormSubmit","preventDefault","this","props","onAddTodo","state","setState","handleTitleChange","value","body","intervalId","titleRef","render","action","placeholder","compRef","useRef","dispatch","useDispatch","todoState","useSelector","console","log","fetchTodos","useCallback","async","fetchTodoList","useEffect","onHandleDelete","deleteATodo","onStatusChange","status","todoExists","todos","find","updateATodo","createATodo","toISOString","map"],"sourceRoot":""}