{"version":3,"file":"static/js/832.dfdc4a79.chunk.js","mappings":"sKAIe,SAASA,IACtB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC3B,OAAEC,IAAWC,EAAAA,EAAAA,MAWnB,OATAC,EAAAA,EAAAA,YAAU,KACRJ,EAAQ,CACNK,GAAIC,SAASJ,GACbK,MAAO,gBACPC,aAAa,EACbC,WAAW,IAAIC,MAAOC,eACtB,GACD,CAACT,KAGFU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACHf,GAAOgB,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACjB,KAAMA,IAAW,OAGzC,C,uDCvBA,MAAMkB,EAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAClDC,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAEhFC,EAAcC,IACzB,MAAMC,EAAU,IAAIX,KAAKU,GACnBE,EAAML,EAAKI,EAAQE,UACnBC,EAAOH,EAAQI,UACfC,EAAQR,EAAOG,EAAQM,YAC7B,MAAM,GAANC,OAAUN,EAAG,OAAAM,OAAMF,EAAK,KAAAE,OAAIJ,EAAI,E,aCH3B,MAAMR,GAAWa,EAAAA,EAAAA,aAAW,SAAiBC,EAElDC,GACC,IAFD,KAAEhC,EAAI,aAAEiC,EAAY,mBAAEC,GAAoBH,EAG1C,MAAMI,GAAWC,EAAAA,EAAAA,MAIjB,OACEvB,EAAAA,EAAAA,MAAA,MAAIC,UAAU,YAAWC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOqB,QAAO,UAAAR,OAAY7B,EAAKM,IAAKS,UAClCC,EAAAA,EAAAA,KAAA,SACEsB,KAAK,WACLC,KAAK,SACLjC,GAAE,UAAAuB,OAAY7B,EAAKM,IACnBkC,QAASxC,EAAKS,YACdgC,SAAWC,GAAMR,EAAmBlC,EAAKM,GAAIoC,EAAEC,OAAOH,SACtDI,IAAKZ,OAGTnB,EAAAA,EAAAA,MAAA,QACEC,UAAWd,EAAKS,YAAc,YAAc,GAC5CoC,QAjBkBC,KACtBX,EAAS,UAADN,OAAW7B,EAAKM,IAAK,EAiBzB,cAAY,aAAYS,SAAA,CAGvBf,EAAKQ,OACNQ,EAAAA,EAAAA,KAAA,SAAOF,UAAU,YAAWC,SAAEK,EAAWpB,EAAKU,iBAEhDM,EAAAA,EAAAA,KAAA,UAAQF,UAAU,iBAAiB+B,QAASA,IAAMZ,EAAajC,EAAKM,IAAIS,UACtEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0BAIrB,G","sources":["components/todo-details/TodoDetails.jsx","shared/utils/utils.js","components/todo-item/TodoItem.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { TodoItem } from \"../todo-item/TodoItem\";\n\nexport default function TodoDetails() {\n  const [todo, setTodo] = useState(null);\n  const { todoId } = useParams();\n\n  useEffect(() => {\n    setTodo({\n      id: parseInt(todoId),\n      title: \"Learn Reactjs\",\n      isCompleted: false,\n      createdAt: new Date().toISOString(),\n    });\n  }, [todoId]);\n\n  return (\n    <div className=\"todo-details\">\n      <h2>Todo Details</h2>\n      {todo ? <TodoItem todo={todo} /> : null}\n    </div>\n  );\n}\n","const DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nexport const formatDate = (dateString) => {\n  const dateObj = new Date(dateString);\n  const day = DAYS[dateObj.getDay()];\n  const date = dateObj.getDate();\n  const month = MONTHS[dateObj.getMonth()];\n  return `${day} - ${month} ${date}`\n}","import React, { forwardRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { formatDate } from \"../../shared/utils/utils\";\nimport \"./TodoItem.css\";\n\nexport const TodoItem = forwardRef(function TodoItem(\n  { todo, handleDelete, handleStatusChange },\n  inputRef\n) {\n  const navigate = useNavigate();\n  const handleTodoClick = () => {\n    navigate(`/todos/${todo.id}`);\n  };\n  return (\n    <li className=\"todo-item\">\n      <label htmlFor={`status-${todo.id}`}>\n        <input\n          type=\"checkbox\"\n          name=\"status\"\n          id={`status-${todo.id}`}\n          checked={todo.isCompleted}\n          onChange={(e) => handleStatusChange(todo.id, e.target.checked)}\n          ref={inputRef}\n        />\n      </label>\n      <span\n        className={todo.isCompleted ? \"completed\" : \"\"}\n        onClick={handleTodoClick}\n        data-testid=\"todo-title\"\n      >\n        {/* <Link to={`/todos/${todo.id}`}>{todo.title}</Link> */}\n        {todo.title}\n        <small className=\"todo-date\">{formatDate(todo.createdAt)}</small>\n      </span>\n      <button className=\"btn btn-danger\" onClick={() => handleDelete(todo.id)}>\n        <i className=\"fa-solid fa-trash\"></i>\n      </button>\n    </li>\n  );\n});\n"],"names":["TodoDetails","todo","setTodo","useState","todoId","useParams","useEffect","id","parseInt","title","isCompleted","createdAt","Date","toISOString","_jsxs","className","children","_jsx","TodoItem","DAYS","MONTHS","formatDate","dateString","dateObj","day","getDay","date","getDate","month","getMonth","concat","forwardRef","_ref","inputRef","handleDelete","handleStatusChange","navigate","useNavigate","htmlFor","type","name","checked","onChange","e","target","ref","onClick","handleTodoClick"],"sourceRoot":""}